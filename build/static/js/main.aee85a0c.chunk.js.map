{"version":3,"sources":["store/data-slice.js","store/store.js","Components/StockView/CustomTableRow/CustomTableRow.Styled.js","Components/StockView/StockView.js","Components/Styled/StyledSelectButton.js","Components/Layout.js","App.js","index.js"],"names":["dataSlice","createSlice","name","initialState","error","isLoading","data","reducers","addData","state","action","payload","updateData","mainIndex","findIndex","d","title","coin","index","item","priceTitle","rowItem","isFavorite","dataActions","actions","store","configureStore","reducer","StyledTableRow","styled","TableRow","$fav","color","$flashColor","keyframes","adaptCoinData","coins","currencies","imges","coinDataObject","i","length","push","id","img","IMAGEURL","j","price","PRICE","changePerHour","CHANGEPCTHOUR","changePerDay","CHANGEPCT24HOUR","StockView","props","query","join","useEffect","func","interval","axiosGet","a","axios","get","headers","response","dispatch","DISPLAY","setInterval","clearInterval","TableContainer","component","Paper","Table","sx","minWidth","map","TableHead","TableCell","fontSize","backgroundColor","align","colSpan","style","marginRight","height","width","src","alt","TableBody","row","paddingTop","paddingBottom","border","paddingRight","onClick","onFavorite","cursor","StyledSelectButton","Button","$isActive","Layout","useSelector","useState","selected","setSelected","updatedSelect","includes","prevState","filter","s","Container","maxWidth","Box","display","flexDirection","ButtonGroup","variant","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aee85a0c.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst dataSlice = createSlice(\n    {\n        name:\"cryptoData\",\n        initialState:{\n            error:false,\n            isLoading:true,\n            data:[]\n        },\n        reducers:{\n            addData(state,action){\n                state.data =action.payload\n                state.isLoading=false;\n            },\n            updateData(state,action){\n                const mainIndex = state.data.findIndex(d => d.title === action.payload.coin);\n                if(mainIndex >= 0) {\n                const index = state.data[mainIndex].data.findIndex(item => item.priceTitle === action.payload.rowItem.priceTitle);\n                 if (index >=0 ) {\n                    state.data[mainIndex].data[index].isFavorite = !action.payload.rowItem.isFavorite;\n                     }\n                }\n            }\n\n\n        }\n    }\n);\n\nexport const dataActions = dataSlice.actions; \nexport default dataSlice;","import { configureStore } from '@reduxjs/toolkit';\nimport dataSlice from './data-slice';\nconst store = configureStore({\n    reducer:{\n        data:dataSlice.reducer\n    }\n});\n\nexport default store;","import { TableRow } from '@mui/material'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst flash = (color) => keyframes`\r\n    0% {\r\n        background-color: ${color};\r\n        opacity:1;\r\n    }\r\n    22% {\r\n        background-color: ${color};\r\n    }\r\n    77% {\r\n        background-color: ${color};\r\n\r\n    }\r\n    100% {\r\n        background-color: gray;\r\n\r\n    }\r\n`\r\n\r\nexport const StyledTableRow = styled(TableRow)`\r\nfont-size: '0.7em';\r\nbackground-color: ${({$fav})=>$fav?'#1b1203':'white'};\r\nanimation: 800ms ${({$flashColor})=>flash($flashColor)} ease-in-out;\r\n\r\n/* animation-duration: 900ms;\r\nanimation-iteration-count: 1;\r\nanimation-timing-function: ease-in-out; */\r\n\r\n`\r\n/* animation: 1s ${({flashColor})=>\r\nflashColor>0?flash('green')\r\n:flashColor<0?flash('red'):\r\nflash('gray')\r\n}ease-out; */\r\n/* background-color: `${ row.isFavorite ?'#1b1203': 'black'}`; */","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport StarIcon from '@mui/icons-material/Star';\nimport axios from \"axios\"\nimport { useEffect, useState } from 'react';\nimport store from '../../store/store';\nimport { useSelector } from 'react-redux';\nimport { dataActions } from '../../store/data-slice';\nimport Spinner from '../Spinner/Spinner';\nimport { StyledTableRow } from './CustomTableRow/CustomTableRow.Styled';\n\n\nconst adaptCoinData = (data, coins, currencies, imges) => {\n  //data is data.display\n  let coinDataObject = [];\n  for (let i = 0; i < coins.length; i++) {\n    coinDataObject.push({ id: i, title: coins[i],\n       img: 'https://www.cryptocompare.com/'+data[coins[i]][currencies[0]].IMAGEURL, data: [] });\n    for (let j = 0; j < currencies.length; j++) {\n      coinDataObject[i].data.push({\n        priceTitle: coins[i] + currencies[j],\n        price: data[coins[i]][currencies[j]].PRICE,\n        changePerHour: data[coins[i]][currencies[j]].CHANGEPCTHOUR,\n        changePerDay: data[coins[i]][currencies[j]].CHANGEPCT24HOUR,\n        // img: 'https://www.cryptocompare.com/'+data[coins[i]][currencies[j]].IMAGEURL,\n        isFavorite: false\n      })\n    }\n  }\n  // const {PRICE,CHANGEPCT24HOUR} = data[coins[0]][currencies[0]];\n  // console.log(PRICE, CHANGEPCT24HOUR);\n  return coinDataObject;\n}\nconst StockView = function StockView(props) {\n  // const data = useSelector(state => state.data.data);\n  const key = \"4ebc065dcb065b4c42eea8129846c459fc7c83959697e68a7ac2acf085b79c04\";\n  const query = \"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=\" + props.coins.join() + \"&tsyms=\" + props.currencies.join();\n  useEffect(() => {\n    // console.log(props.data)\n    const axiosGet = async () => {\n      const response = await axios.get(query, { headers: { \"authorization\": `Apikey ${key}` } });\n      store.dispatch(dataActions.addData(adaptCoinData(response.data.DISPLAY, props.coins, props.currencies)));\n      //  console.log(adaptCoinData(response.data.DISPLAY, coins, currencies));\n      // console.log(\"response\");\n      // console.log(response.data.DISPLAY);\n    }\n    const setIntervalImmediately = (func, interval) => {\n      func();\n      return setInterval(func, interval);\n    }\n    const id = setIntervalImmediately(axiosGet, 8000);\n    return () => {\n      clearInterval(id);\n    }\n\n  }, [query]);\n\n\n\n\n  return (\n    <>\n      {/* {isDataLoaded ? <Spinner sx={{ backgroundColor: \"black\" }} /> : */}\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 350 }} aria-label=\"spanning table\">\n            {props.data.map((coin) => (\n              <React.Fragment key={coin.id}>\n                <TableHead key={coin.id}>\n                  <TableRow >\n                    <TableCell sx={{ fontSize: 'inherit', color: 'white', backgroundColor: '#C1C1C1'}} align=\"left\" colSpan={5}>\n                      <img style={{ backgroundColor: \"white\", marginRight: \"5px\",height:\"30px\",width:\"30px\" }} src={coin.img} alt=\"img\" />{coin.title}\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody >\n                  {coin.data.map((row, index) => (\n                    // <TableRow sx={{ fontSize: '0.7em', backgroundColor: `${row.isFavorite ? '#1b1203' : 'black'}` }} key={row.priceTitle}>\n                    <StyledTableRow $fav={row.isFavorite} $flashColor={row.changePerHour > 0 ? 'green' : 'red'} key={index}>\n                      <TableCell sx={{ fontSize: 'inherit', color: 'gray', paddingTop: '1px', paddingBottom: '1px', border: 'none' }} align=\"left\">{row.priceTitle}</TableCell>\n                      <TableCell sx={{ fontSize: 'inherit', paddingTop: '1px', paddingBottom: '1px', paddingRight: '50px', color: 'gray', border: 'none' }} align=\"right\">{row.price}</TableCell>\n                      <TableCell sx={{ fontSize: 'inherit', color: `${row.changePerHour > 0 ? 'green' : 'red'}`, paddingTop: '1px', paddingBottom: '1px', border: 'none' }} align=\"center\">\n                        {row.changePerHour > 0 ? `+${row.changePerHour}%` : `${row.changePerHour}%`}\n                      </TableCell>\n                      <TableCell sx={{ fontSize: 'inherit', paddingTop: '1px', color: `${row.changePerDay > 0 ? 'green' : 'red'}`, paddingBottom: '1px', border: 'none' }} align=\"right\">{row.changePerDay}%</TableCell>\n                      <TableCell onClick={() => props.onFavorite(coin.title, row)} sx={{ fontSize: '0.4em', cursor: 'pointer', color: `${row.isFavorite ? '#e3991e' : 'gray'}`, paddingTop: '1px', paddingBottom: '1px', border: 'none' }} align=\"center\"><StarIcon /></TableCell>\n                    </StyledTableRow>\n                    // </TableRow>\n                  ))}\n                </TableBody>\n              </React.Fragment>\n            ))}\n          </Table>\n        </TableContainer>\n      {/* } */}\n    </>\n\n  );\n}\n\nexport default StockView;\n\n\n\n","import { Button } from \"@mui/material\";\r\nimport styled from 'styled-components'\r\n\r\nexport const StyledSelectButton = styled(Button)`\r\nflex:1;\r\nbackground-color: ${({$isActive})=>$isActive?\"#898989\":'#C1C1C1'};\r\n`","import { Fragment, useState } from \"react\";\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport StockView from \"./StockView/StockView\";\nimport { dataActions } from \"../store/data-slice\";\nimport store from \"../store/store\";\nimport { useSelector } from \"react-redux\";\nimport { StyledSelectButton } from \"./Styled/StyledSelectButton\";\n// import Spinner from \"./Spinner/Spinner\";\n\nconst Layout = () => {\n    const data = useSelector(state => state.data.data)\n    const currencies = [\"AUD\", \"BTC\", \"CAD\", \"ETH\", \"EUR\", \"GBP\", \"JPY\", \"USD\", \"USDT\"];\n    const [selected, setSelected] = useState([\"BTC\",\"XRP\", \"BCH\"]);\n    const onFavorite = (coin, rowItem) => {\n        store.dispatch(dataActions.updateData({\n            coin: coin,\n            rowItem: rowItem\n        }));\n    }\n\n    const updatedSelect = (coin) => {\n        if (selected.includes(coin)) {\n            setSelected(prevState=>prevState.filter(s => s !== coin))\n        } else {\n            setSelected(prevState=>[...prevState, coin])\n        }\n    }\n    return (\n        <Fragment>\n            <Container maxWidth=\"sm\">\n                <Box sx={{\n                    display: \"flex\",\n                    paddingTop: '5px',\n                    paddingBottom: '50px',\n                    flexDirection: \"column\"\n                }}>\n\n                    <ButtonGroup sx={{ backgroundColor: '#C1C1C1',display:\"flex\"}} variant=\"contained\" aria-label=\" button group\" >\n                        <StyledSelectButton onClick={() => updatedSelect('XRP')} $isActive={selected.includes(\"XRP\")}>XRP</StyledSelectButton>\n                        <StyledSelectButton onClick={() => updatedSelect('BCH')} $isActive={selected.includes(\"BCH\")}>BCH</StyledSelectButton>\n                        <StyledSelectButton onClick={() => updatedSelect('BTC')} $isActive={selected.includes(\"BTC\")}>BTC</StyledSelectButton>\n                    </ButtonGroup>\n\n\n                    {/* <DataList/> */}\n\n                    <StockView coins={selected} currencies={currencies} data={data.filter(item => selected.includes(item.title))} onFavorite={onFavorite} />\n                </Box>\n            </Container>\n        </Fragment>\n    )\n};\nexport default Layout;","import './App.css';\n// import{ dummyData } from './Components/dummyData';\n// import store from './store/store';\n// import { dataActions } from './store/data-slice';\nimport * as React from 'react';\nimport Layout from './Components/Layout';\n\n\n\n\nfunction App() {\n  return (\n    <>\n      <Layout/>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}